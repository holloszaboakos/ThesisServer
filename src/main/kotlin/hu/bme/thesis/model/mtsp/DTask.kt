/**
 * DRP
 * This is the hu.bme.thesis.utility.main server of QLM's DRP system
 *
 * OpenAPI spec version: 1.0.0
 * Contact: akos.hollo-szabo@qlndc.hu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package hu.bme.thesis.model.mtsp

import java.util.*
import javax.persistence.*

/**
 *
 * @param id
 * @param name
 * @param salesmen
 * @param costGraph
 */
@Entity
@Table(name = "task")
@NamedQueries(
    NamedQuery(
        name = "listTask",
        query = "FROM Task"
    ),
    NamedQuery(
        name = "findByNameTask",
        query = "FROM Task where name = :name"
    )
)
data class DTask(
    @Id
    @Column(name = "id", length = 255)
    var id: String = UUID.randomUUID().toString(),
    val name: String = "",
    @OneToMany(cascade = [CascadeType.ALL])
    @OrderColumn(name = "orderInOwner")
    val salesmen: Array<DSalesman> = arrayOf(),
    @OneToOne(cascade = [CascadeType.ALL])
    val costGraph: DGraph = DGraph()
) {
    init {
        salesmen.forEachIndexed { index, value ->
            value.orderInOwner = index
        }
    }

    override fun equals(other: Any?): Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as DTask

        if (id != other.id) return false
        if (name != other.name) return false
        if (!salesmen.contentEquals(other.salesmen)) return false
        if (costGraph != other.costGraph) return false

        return true
    }

    override fun hashCode(): Int {
        var result = id.hashCode()
        result = 31 * result + name.hashCode()
        result = 31 * result + salesmen.contentHashCode()
        result = 31 * result + costGraph.hashCode()
        return result
    }
}

