/**
* DRP
* This is the hu.bme.thesis.main server of QLM's DRP system
*
* OpenAPI spec version: 1.0.0
* Contact: akos.hollo-szabo@qlndc.hu
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
package hu.bme.thesis.model.mtsp

import java.math.BigDecimal
import java.util.*
import javax.persistence.*

/**
 * 
 * @param id 
 * @param name 
 * @param bestRout 
 * @param maxCost_Euro 
 * @param minCost_Euro 
 * @param bestCost_Euro 
 */
@Entity
@Table(name = "result")
@NamedQueries(
    NamedQuery(
        name = "listResult",
        query = "FROM Result"
    ),
    NamedQuery(
        name = "findByNameResult",
        query = "FROM Result where name = :name"
    )
)
data class DResult (
    @Id
    @Column(name = "id", length = 255)
    var id: String = UUID.randomUUID().toString(),
    val name: String="",
    @OneToMany(cascade = [CascadeType.ALL])
    @OrderColumn(name = "orderInOwner")
    val bestRout: Array<DGpsArray> = arrayOf(),
    val maxCost_Euro: Double= 0.0,
    val minCost_Euro: Double= 0.0,
    val bestCost_Euro: Double= 0.0
){
    init {
        bestRout.forEachIndexed { indexArray, array ->
            array.orderInOwner = indexArray
            array.values.forEachIndexed { indexValue, value ->
                value.orderInOwner = indexValue
            }
        }
    }

    override fun equals(other: Any?): Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as DResult

        if (id != other.id) return false
        if (name != other.name) return false
        if (!bestRout.contentEquals(other.bestRout)) return false
        if (maxCost_Euro != other.maxCost_Euro) return false
        if (minCost_Euro != other.minCost_Euro) return false
        if (bestCost_Euro != other.bestCost_Euro) return false

        return true
    }

    override fun hashCode(): Int {
        var result = id.hashCode()
        result = 31 * result + name.hashCode()
        result = 31 * result + bestRout.contentHashCode()
        result = 31 * result + maxCost_Euro.hashCode()
        result = 31 * result + minCost_Euro.hashCode()
        result = 31 * result + bestCost_Euro.hashCode()
        return result
    }
}

