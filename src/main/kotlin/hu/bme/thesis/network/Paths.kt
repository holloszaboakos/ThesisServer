/**
* DRP
* This is the hu.bme.thesis.utility.main server of QLM's DRP system
*
* OpenAPI spec version: 1.0.0
* Contact: akos.hollo-szabo@qlndc.hu
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
package hu.bme.thesis.network

import io.ktor.application.ApplicationCall
import io.ktor.http.HttpMethod
import io.ktor.locations.*
import io.ktor.routing.Route
import io.ktor.routing.method
import io.ktor.util.pipeline.*


// NOTE: ktor-location@0.9.0 is missing extension for Route.delete. This includes it.
@KtorExperimentalLocationsAPI
inline fun <reified T : Any> Route.delete(noinline body: suspend PipelineContext<Unit, ApplicationCall>.(T) -> Unit): Route {
    return location(T::class) {
        method(HttpMethod.Delete) {
            handle(body)
        }
    }
}

object Paths {
    /**
     * List available algorithms
     * List available algorithms to choose from
     */
    @KtorExperimentalLocationsAPI
    @Location("/setup/setting/algorithm") class listAlgorithms()

    /**
     * List names of settings
     * List names of saved settings
     */
    @KtorExperimentalLocationsAPI
    @Location("/setup/setting/list") class listSettingsNames()

    /**
     * List names of tasks
     * List names of saved tasks
     */
    @KtorExperimentalLocationsAPI
    @Location("/setup/task/list") class listTaskNames()


    /**
     * Load setting
     * Load setting with a name maching the parameter
     * @param name Setting name
     */
    @KtorExperimentalLocationsAPI
    @Location("/setup/setting") class loadSetting(val name: kotlin.String)

    /**
     * Load task
     * Load task with a name maching the parameter
     * @param name Task name
     */
    @KtorExperimentalLocationsAPI
    @Location("/setup/task") class loadTask(val name: kotlin.String)

    /**
     * Delete objective
     * delete objective specified by name
     * @param body identifier
     */
    @KtorExperimentalLocationsAPI
    @Location("/setup/objective") class removeObjective(val body: kotlin.String)

    /**
     * Delete salesman
     * delete salesman specified by name
     * @param body identifier
     */
    @KtorExperimentalLocationsAPI
    @Location("/setup/salesman") class removeSalesman(val body: kotlin.String)

    /**
     * get run progress of running algorithm
     * get runtime and iteration of running algorithm
     */
    @KtorExperimentalLocationsAPI
    @Location("/update/progress") class getProgress()

    /**
     * get actual result
     * get actual result of startes algorithm
     */
    @KtorExperimentalLocationsAPI
    @Location("/update/result") class getResult()


    /**
     * get rout between locations
     * get rout between two locations specified by GPS coordinates
     * @param fromLat lattitude of GPS coords of source location
     * @param fromLong longitude of GPS coords of source location
     * @param toLat lattitude of GPS coords of target location
     * @param toLong longitude of GPS coords of target location
     */
    @KtorExperimentalLocationsAPI
    @Location("/update/rout/{fromLat}/{fromLong}/{toLat}/{toLong}") class getRoutBetween(val fromLat: java.math.BigDecimal, val fromLong: java.math.BigDecimal, val toLat: java.math.BigDecimal, val toLong: java.math.BigDecimal)

}
